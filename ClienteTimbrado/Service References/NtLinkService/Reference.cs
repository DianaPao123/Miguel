//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteNtLink.NtLinkService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://ntlink.com.mx/ICertificador", ConfigurationName="NtLinkService.ICertificador")]
    public interface ICertificador {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/ICertificador/ICertificador/TimbraCfdi", ReplyAction="https://ntlink.com.mx/ICertificador/ICertificador/TimbraCfdiResponse")]
        string TimbraCfdi(string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/ICertificador/ICertificador/CancelaCfdi", ReplyAction="https://ntlink.com.mx/ICertificador/ICertificador/CancelaCfdiResponse")]
        string CancelaCfdi(string uuid, string rfcEmisor, string expresion, string rfcReceptor);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/ICertificador/ICertificador/CancelaRetencion", ReplyAction="https://ntlink.com.mx/ICertificador/ICertificador/CancelaRetencionResponse")]
        string CancelaRetencion(string uuid, string rfc);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/ICertificador/ICertificador/ValidaTimbraCfdi", ReplyAction="https://ntlink.com.mx/ICertificador/ICertificador/ValidaTimbraCfdiResponse")]
        string ValidaTimbraCfdi(string comprobante);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/ICertificador/ICertificador/ValidaRFC", ReplyAction="https://ntlink.com.mx/ICertificador/ICertificador/ValidaRFCResponse")]
        string ValidaRFC(string RFC);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://ntlink.com.mx/ICertificador/ICertificador/ConsultaEstatusCFDI", ReplyAction="https://ntlink.com.mx/ICertificador/ICertificador/ConsultaEstatusCFDIResponse")]
        string ConsultaEstatusCFDI(string expresion);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICertificadorChannel : ClienteNtLink.NtLinkService.ICertificador, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CertificadorClient : System.ServiceModel.ClientBase<ClienteNtLink.NtLinkService.ICertificador>, ClienteNtLink.NtLinkService.ICertificador {
        
        public CertificadorClient() {
        }
        
        public CertificadorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CertificadorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CertificadorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CertificadorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string TimbraCfdi(string comprobante) {
            return base.Channel.TimbraCfdi(comprobante);
        }
        
        public string CancelaCfdi(string uuid, string rfcEmisor, string expresion, string rfcReceptor) {
            return base.Channel.CancelaCfdi(uuid, rfcEmisor, expresion, rfcReceptor);
        }
        
        public string CancelaRetencion(string uuid, string rfc) {
            return base.Channel.CancelaRetencion(uuid, rfc);
        }
        
        public string ValidaTimbraCfdi(string comprobante) {
            return base.Channel.ValidaTimbraCfdi(comprobante);
        }
        
        public string ValidaRFC(string RFC) {
            return base.Channel.ValidaRFC(RFC);
        }
        
        public string ConsultaEstatusCFDI(string expresion) {
            return base.Channel.ConsultaEstatusCFDI(expresion);
        }
    }
}
